// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.domain;

import com.labsynch.labseer.domain.SubjectState;
import java.util.List;

privileged aspect SubjectState_Roo_Jpa_ActiveRecord {
    
    public static final List<String> SubjectState.fieldNames4OrderClauseFilter = java.util.Arrays.asList("logger", "subject", "lsValues");
    
    public static List<SubjectState> SubjectState.findAllSubjectStates(String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM SubjectState o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, SubjectState.class).getResultList();
    }
    
    public static List<SubjectState> SubjectState.findSubjectStateEntries(int firstResult, int maxResults, String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM SubjectState o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, SubjectState.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
