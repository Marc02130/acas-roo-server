// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.labsynch.labseer.domain;

import com.labsynch.labseer.domain.InteractionType;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect InteractionType_Roo_Finder {
    
    public static TypedQuery<InteractionType> InteractionType.findInteractionTypesByTypeNameEquals(String typeName) {
        if (typeName == null || typeName.length() == 0) throw new IllegalArgumentException("The typeName argument is required");
        EntityManager em = InteractionType.entityManager();
        TypedQuery<InteractionType> q = em.createQuery("SELECT o FROM InteractionType AS o WHERE o.typeName = :typeName", InteractionType.class);
        q.setParameter("typeName", typeName);
        return q;
    }
    
    public static TypedQuery<InteractionType> InteractionType.findInteractionTypesByTypeNameEqualsAndTypeVerbEquals(String typeName, String typeVerb) {
        if (typeName == null || typeName.length() == 0) throw new IllegalArgumentException("The typeName argument is required");
        if (typeVerb == null || typeVerb.length() == 0) throw new IllegalArgumentException("The typeVerb argument is required");
        EntityManager em = InteractionType.entityManager();
        TypedQuery<InteractionType> q = em.createQuery("SELECT o FROM InteractionType AS o WHERE o.typeName = :typeName  AND o.typeVerb = :typeVerb", InteractionType.class);
        q.setParameter("typeName", typeName);
        q.setParameter("typeVerb", typeVerb);
        return q;
    }
    
}
